/*
 * Textmagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FileMetadataPreview'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FileMetadataPreview'));
  } else {
    // Browser globals (root is window)
    if (!root.TextmagicClient) {
      root.TextmagicClient = {};
    }
    root.TextmagicClient.FileMetadata = factory(root.TextmagicClient.ApiClient, root.TextmagicClient.FileMetadataPreview);
  }
}(this, function(ApiClient, FileMetadataPreview) {
  'use strict';

  /**
   * The FileMetadata model module.
   * @module model/FileMetadata
   * @version 2.0.43753
   */

  /**
   * Constructs a new <code>FileMetadata</code>.
   * @alias module:model/FileMetadata
   * @class
   * @param type {module:model/FileMetadata.TypeEnum} File metadata type.
   * @param height {Number} 
   * @param width {Number} 
   * @param preview {module:model/FileMetadataPreview} 
   */
  var exports = function(type, height, width, preview) {
    this.type = type;
    this.height = height;
    this.width = width;
    this.preview = preview;
  };

  /**
   * Constructs a <code>FileMetadata</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FileMetadata} obj Optional instance to populate.
   * @return {module:model/FileMetadata} The populated <code>FileMetadata</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('height'))
        obj.height = ApiClient.convertToType(data['height'], 'Number');
      if (data.hasOwnProperty('width'))
        obj.width = ApiClient.convertToType(data['width'], 'Number');
      if (data.hasOwnProperty('preview'))
        obj.preview = FileMetadataPreview.constructFromObject(data['preview']);
    }
    return obj;
  }

  /**
   * File metadata type.
   * @member {module:model/FileMetadata.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * @member {Number} height
   */
  exports.prototype.height = undefined;

  /**
   * @member {Number} width
   */
  exports.prototype.width = undefined;

  /**
   * @member {module:model/FileMetadataPreview} preview
   */
  exports.prototype.preview = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "image"
     * @const
     */
    image: "image",

    /**
     * value: "video"
     * @const
     */
    video: "video"
  };

  return exports;

}));
