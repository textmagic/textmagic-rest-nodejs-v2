/*
 * Textmagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/FileMetadata'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FileMetadata'));
  } else {
    // Browser globals (root is window)
    if (!root.TextmagicClient) {
      root.TextmagicClient = {};
    }
    root.TextmagicClient.File = factory(root.TextmagicClient.ApiClient, root.TextmagicClient.FileMetadata);
  }
}(this, function(ApiClient, FileMetadata) {
  'use strict';

  /**
   * The File model module.
   * @module model/File
   * @version 2.0.43640
   */

  /**
   * Constructs a new <code>File</code>.
   * @alias module:model/File
   * @class
   * @param id {Number} 
   * @param name {String} 
   * @param originalName {String} 
   * @param mimeType {String} 
   * @param size {Number} 
   * @param type {module:model/File.TypeEnum} File type.
   * @param createdAt {Date} 
   */
  var exports = function(id, name, originalName, mimeType, size, type, createdAt) {
    this.id = id;
    this.name = name;
    this.originalName = originalName;
    this.mimeType = mimeType;
    this.size = size;
    this.type = type;
    this.createdAt = createdAt;
  };

  /**
   * Constructs a <code>File</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/File} obj Optional instance to populate.
   * @return {module:model/File} The populated <code>File</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('originalName'))
        obj.originalName = ApiClient.convertToType(data['originalName'], 'String');
      if (data.hasOwnProperty('mimeType'))
        obj.mimeType = ApiClient.convertToType(data['mimeType'], 'String');
      if (data.hasOwnProperty('size'))
        obj.size = ApiClient.convertToType(data['size'], 'Number');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('createdAt'))
        obj.createdAt = ApiClient.convertToType(data['createdAt'], 'Date');
      if (data.hasOwnProperty('previewUrl'))
        obj.previewUrl = ApiClient.convertToType(data['previewUrl'], 'String');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('metadata'))
        obj.metadata = FileMetadata.constructFromObject(data['metadata']);
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {String} originalName
   */
  exports.prototype.originalName = undefined;

  /**
   * @member {String} mimeType
   */
  exports.prototype.mimeType = undefined;

  /**
   * @member {Number} size
   */
  exports.prototype.size = undefined;

  /**
   * File type.
   * @member {module:model/File.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * @member {Date} createdAt
   */
  exports.prototype.createdAt = undefined;

  /**
   * @member {String} previewUrl
   */
  exports.prototype.previewUrl = undefined;

  /**
   * @member {String} url
   */
  exports.prototype.url = undefined;

  /**
   * @member {module:model/FileMetadata} metadata
   */
  exports.prototype.metadata = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "attachment"
     * @const
     */
    attachment: "attachment",

    /**
     * value: "import"
     * @const
     */
    _import: "import",

    /**
     * value: "raw_email"
     * @const
     */
    rawEmail: "raw_email",

    /**
     * value: "inline_attachment"
     * @const
     */
    inlineAttachment: "inline_attachment",

    /**
     * value: "chat-attachment"
     * @const
     */
    chatAttachment: "chat-attachment",

    /**
     * value: "knowledge_base"
     * @const
     */
    knowledgeBase: "knowledge_base",

    /**
     * value: "facebook_page_picture"
     * @const
     */
    facebookPagePicture: "facebook_page_picture",

    /**
     * value: "instagram_account_picture"
     * @const
     */
    instagramAccountPicture: "instagram_account_picture",

    /**
     * value: "logo"
     * @const
     */
    logo: "logo"
  };

  return exports;

}));
