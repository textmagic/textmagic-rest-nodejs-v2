/*
 * Textmagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.TextmagicClient) {
      root.TextmagicClient = {};
    }
    root.TextmagicClient.OutboundEmailResponse = factory(root.TextmagicClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The OutboundEmailResponse model module.
   * @module model/OutboundEmailResponse
   * @version 2.0.43753
   */

  /**
   * Constructs a new <code>OutboundEmailResponse</code>.
   * @alias module:model/OutboundEmailResponse
   * @class
   * @param id {Number} Outbound email ID.
   * @param sendTime {Date} Email send timestamp.
   * @param fromEmail {String} Sender email address.
   * @param replyToEmail {String} Reply-to email address.
   * @param emailSubject {String} Email subject line.
   * @param emailContent {String} HTML email content.
   * @param source {module:model/OutboundEmailResponse.SourceEnum} Source of the outbound email.
   * @param status {module:model/OutboundEmailResponse.StatusEnum} Current email status.
   * @param cost {Number} Cost of sending this email.
   * @param initiatorId {Number} ID of user who initiated the email.
   */
  var exports = function(id, sendTime, fromEmail, replyToEmail, emailSubject, emailContent, source, status, cost, initiatorId) {
    this.id = id;
    this.sendTime = sendTime;
    this.fromEmail = fromEmail;
    this.replyToEmail = replyToEmail;
    this.emailSubject = emailSubject;
    this.emailContent = emailContent;
    this.source = source;
    this.status = status;
    this.cost = cost;
    this.initiatorId = initiatorId;
  };

  /**
   * Constructs a <code>OutboundEmailResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OutboundEmailResponse} obj Optional instance to populate.
   * @return {module:model/OutboundEmailResponse} The populated <code>OutboundEmailResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('sendTime'))
        obj.sendTime = ApiClient.convertToType(data['sendTime'], 'Date');
      if (data.hasOwnProperty('fromName'))
        obj.fromName = ApiClient.convertToType(data['fromName'], 'String');
      if (data.hasOwnProperty('fromEmail'))
        obj.fromEmail = ApiClient.convertToType(data['fromEmail'], 'String');
      if (data.hasOwnProperty('replyToEmail'))
        obj.replyToEmail = ApiClient.convertToType(data['replyToEmail'], 'String');
      if (data.hasOwnProperty('recipientFullName'))
        obj.recipientFullName = ApiClient.convertToType(data['recipientFullName'], 'String');
      if (data.hasOwnProperty('recipientEmail'))
        obj.recipientEmail = ApiClient.convertToType(data['recipientEmail'], 'String');
      if (data.hasOwnProperty('emailSubject'))
        obj.emailSubject = ApiClient.convertToType(data['emailSubject'], 'String');
      if (data.hasOwnProperty('emailContent'))
        obj.emailContent = ApiClient.convertToType(data['emailContent'], 'String');
      if (data.hasOwnProperty('source'))
        obj.source = ApiClient.convertToType(data['source'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('cost'))
        obj.cost = ApiClient.convertToType(data['cost'], 'Number');
      if (data.hasOwnProperty('statusReason'))
        obj.statusReason = ApiClient.convertToType(data['statusReason'], 'String');
      if (data.hasOwnProperty('contactId'))
        obj.contactId = ApiClient.convertToType(data['contactId'], 'Number');
      if (data.hasOwnProperty('initiatorId'))
        obj.initiatorId = ApiClient.convertToType(data['initiatorId'], 'Number');
    }
    return obj;
  }

  /**
   * Outbound email ID.
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * Email send timestamp.
   * @member {Date} sendTime
   */
  exports.prototype.sendTime = undefined;

  /**
   * Sender name.
   * @member {String} fromName
   */
  exports.prototype.fromName = undefined;

  /**
   * Sender email address.
   * @member {String} fromEmail
   */
  exports.prototype.fromEmail = undefined;

  /**
   * Reply-to email address.
   * @member {String} replyToEmail
   */
  exports.prototype.replyToEmail = undefined;

  /**
   * Recipient's full name.
   * @member {String} recipientFullName
   */
  exports.prototype.recipientFullName = undefined;

  /**
   * Recipient's email address.
   * @member {String} recipientEmail
   */
  exports.prototype.recipientEmail = undefined;

  /**
   * Email subject line.
   * @member {String} emailSubject
   */
  exports.prototype.emailSubject = undefined;

  /**
   * HTML email content.
   * @member {String} emailContent
   */
  exports.prototype.emailContent = undefined;

  /**
   * Source of the outbound email.
   * @member {module:model/OutboundEmailResponse.SourceEnum} source
   */
  exports.prototype.source = undefined;

  /**
   * Current email status.
   * @member {module:model/OutboundEmailResponse.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * Cost of sending this email.
   * @member {Number} cost
   */
  exports.prototype.cost = undefined;

  /**
   * Detailed status reason.
   * @member {String} statusReason
   */
  exports.prototype.statusReason = undefined;

  /**
   * Associated contact ID.
   * @member {Number} contactId
   */
  exports.prototype.contactId = undefined;

  /**
   * ID of user who initiated the email.
   * @member {Number} initiatorId
   */
  exports.prototype.initiatorId = undefined;


  /**
   * Allowed values for the <code>source</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SourceEnum = {
    /**
     * value: "emailCampaign"
     * @const
     */
    emailCampaign: "emailCampaign",

    /**
     * value: "ticket"
     * @const
     */
    ticket: "ticket"
  };


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "pending"
     * @const
     */
    pending: "pending",

    /**
     * value: "sent"
     * @const
     */
    sent: "sent",

    /**
     * value: "delivered"
     * @const
     */
    delivered: "delivered",

    /**
     * value: "rejected"
     * @const
     */
    rejected: "rejected",

    /**
     * value: "failed"
     * @const
     */
    failed: "failed",

    /**
     * value: "opened"
     * @const
     */
    opened: "opened",

    /**
     * value: "clicked"
     * @const
     */
    clicked: "clicked",

    /**
     * value: "unsubscribed"
     * @const
     */
    unsubscribed: "unsubscribed",

    /**
     * value: "spam"
     * @const
     */
    spam: "spam"
  };

  return exports;

}));
