/**
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TextmagicClient);
  }
}(this, function(expect, TextmagicClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TextmagicClient.SubaccountWithToken();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubaccountWithToken', function() {
    it('should create an instance of SubaccountWithToken', function() {
      // uncomment below and update the code to test SubaccountWithToken
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be.a(TextmagicClient.SubaccountWithToken);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property balance (base name: "balance")', function() {
      // uncomment below and update the code to test the property balance
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property subaccountType (base name: "subaccountType")', function() {
      // uncomment below and update the code to test the property subaccountType
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property emailAccepted (base name: "emailAccepted")', function() {
      // uncomment below and update the code to test the property emailAccepted
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property phoneAccepted (base name: "phoneAccepted")', function() {
      // uncomment below and update the code to test the property phoneAccepted
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property avatar (base name: "avatar")', function() {
      // uncomment below and update the code to test the property avatar
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function() {
      // uncomment below and update the code to test the property token
      //var instance = new TextmagicClient.SubaccountWithToken();
      //expect(instance).to.be();
    });

  });

}));
