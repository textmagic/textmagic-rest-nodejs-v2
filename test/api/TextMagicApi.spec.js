/**
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TextmagicClient);
  }
}(this, function(expect, TextmagicClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TextmagicClient.TextMagicApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TextMagicApi', function() {
    describe('assignContactsToList', function() {
      it('should call assignContactsToList successfully', function(done) {
        //uncomment below and update the code to test assignContactsToList
        //instance.assignContactsToList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockContact', function() {
      it('should call blockContact successfully', function(done) {
        //uncomment below and update the code to test blockContact
        //instance.blockContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('buyDedicatedNumber', function() {
      it('should call buyDedicatedNumber successfully', function(done) {
        //uncomment below and update the code to test buyDedicatedNumber
        //instance.buyDedicatedNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelVerification', function() {
      it('should call cancelVerification successfully', function(done) {
        //uncomment below and update the code to test cancelVerification
        //instance.cancelVerification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkPhoneVerificationCodeTFA', function() {
      it('should call checkPhoneVerificationCodeTFA successfully', function(done) {
        //uncomment below and update the code to test checkPhoneVerificationCodeTFA
        //instance.checkPhoneVerificationCodeTFA(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('clearAndAssignContactsToList', function() {
      it('should call clearAndAssignContactsToList successfully', function(done) {
        //uncomment below and update the code to test clearAndAssignContactsToList
        //instance.clearAndAssignContactsToList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('closeChatsBulk', function() {
      it('should call closeChatsBulk successfully', function(done) {
        //uncomment below and update the code to test closeChatsBulk
        //instance.closeChatsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('closeReadChats', function() {
      it('should call closeReadChats successfully', function(done) {
        //uncomment below and update the code to test closeReadChats
        //instance.closeReadChats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('closeSubaccount', function() {
      it('should call closeSubaccount successfully', function(done) {
        //uncomment below and update the code to test closeSubaccount
        //instance.closeSubaccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContact', function() {
      it('should call createContact successfully', function(done) {
        //uncomment below and update the code to test createContact
        //instance.createContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContactNote', function() {
      it('should call createContactNote successfully', function(done) {
        //uncomment below and update the code to test createContactNote
        //instance.createContactNote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCustomField', function() {
      it('should call createCustomField successfully', function(done) {
        //uncomment below and update the code to test createCustomField
        //instance.createCustomField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createList', function() {
      it('should call createList successfully', function(done) {
        //uncomment below and update the code to test createList
        //instance.createList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTemplate', function() {
      it('should call createTemplate successfully', function(done) {
        //uncomment below and update the code to test createTemplate
        //instance.createTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAllContacts', function() {
      it('should call deleteAllContacts successfully', function(done) {
        //uncomment below and update the code to test deleteAllContacts
        //instance.deleteAllContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAllOutboundMessages', function() {
      it('should call deleteAllOutboundMessages successfully', function(done) {
        //uncomment below and update the code to test deleteAllOutboundMessages
        //instance.deleteAllOutboundMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAvatar', function() {
      it('should call deleteAvatar successfully', function(done) {
        //uncomment below and update the code to test deleteAvatar
        //instance.deleteAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteChatMessages', function() {
      it('should call deleteChatMessages successfully', function(done) {
        //uncomment below and update the code to test deleteChatMessages
        //instance.deleteChatMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteChatsBulk', function() {
      it('should call deleteChatsBulk successfully', function(done) {
        //uncomment below and update the code to test deleteChatsBulk
        //instance.deleteChatsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContact', function() {
      it('should call deleteContact successfully', function(done) {
        //uncomment below and update the code to test deleteContact
        //instance.deleteContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContactAvatar', function() {
      it('should call deleteContactAvatar successfully', function(done) {
        //uncomment below and update the code to test deleteContactAvatar
        //instance.deleteContactAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContactNote', function() {
      it('should call deleteContactNote successfully', function(done) {
        //uncomment below and update the code to test deleteContactNote
        //instance.deleteContactNote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContactNotesBulk', function() {
      it('should call deleteContactNotesBulk successfully', function(done) {
        //uncomment below and update the code to test deleteContactNotesBulk
        //instance.deleteContactNotesBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContactsByIds', function() {
      it('should call deleteContactsByIds successfully', function(done) {
        //uncomment below and update the code to test deleteContactsByIds
        //instance.deleteContactsByIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContactsFromList', function() {
      it('should call deleteContactsFromList successfully', function(done) {
        //uncomment below and update the code to test deleteContactsFromList
        //instance.deleteContactsFromList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCustomField', function() {
      it('should call deleteCustomField successfully', function(done) {
        //uncomment below and update the code to test deleteCustomField
        //instance.deleteCustomField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDedicatedNumber', function() {
      it('should call deleteDedicatedNumber successfully', function(done) {
        //uncomment below and update the code to test deleteDedicatedNumber
        //instance.deleteDedicatedNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInboundMessage', function() {
      it('should call deleteInboundMessage successfully', function(done) {
        //uncomment below and update the code to test deleteInboundMessage
        //instance.deleteInboundMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteInboundMessagesBulk', function() {
      it('should call deleteInboundMessagesBulk successfully', function(done) {
        //uncomment below and update the code to test deleteInboundMessagesBulk
        //instance.deleteInboundMessagesBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteList', function() {
      it('should call deleteList successfully', function(done) {
        //uncomment below and update the code to test deleteList
        //instance.deleteList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteListAvatar', function() {
      it('should call deleteListAvatar successfully', function(done) {
        //uncomment below and update the code to test deleteListAvatar
        //instance.deleteListAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteListContactsBulk', function() {
      it('should call deleteListContactsBulk successfully', function(done) {
        //uncomment below and update the code to test deleteListContactsBulk
        //instance.deleteListContactsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteListsBulk', function() {
      it('should call deleteListsBulk successfully', function(done) {
        //uncomment below and update the code to test deleteListsBulk
        //instance.deleteListsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMessageSession', function() {
      it('should call deleteMessageSession successfully', function(done) {
        //uncomment below and update the code to test deleteMessageSession
        //instance.deleteMessageSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMessageSessionsBulk', function() {
      it('should call deleteMessageSessionsBulk successfully', function(done) {
        //uncomment below and update the code to test deleteMessageSessionsBulk
        //instance.deleteMessageSessionsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOutboundMessage', function() {
      it('should call deleteOutboundMessage successfully', function(done) {
        //uncomment below and update the code to test deleteOutboundMessage
        //instance.deleteOutboundMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteOutboundMessagesBulk', function() {
      it('should call deleteOutboundMessagesBulk successfully', function(done) {
        //uncomment below and update the code to test deleteOutboundMessagesBulk
        //instance.deleteOutboundMessagesBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteScheduledMessage', function() {
      it('should call deleteScheduledMessage successfully', function(done) {
        //uncomment below and update the code to test deleteScheduledMessage
        //instance.deleteScheduledMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteScheduledMessagesBulk', function() {
      it('should call deleteScheduledMessagesBulk successfully', function(done) {
        //uncomment below and update the code to test deleteScheduledMessagesBulk
        //instance.deleteScheduledMessagesBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSenderId', function() {
      it('should call deleteSenderId successfully', function(done) {
        //uncomment below and update the code to test deleteSenderId
        //instance.deleteSenderId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTemplate', function() {
      it('should call deleteTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteTemplate
        //instance.deleteTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTemplatesBulk', function() {
      it('should call deleteTemplatesBulk successfully', function(done) {
        //uncomment below and update the code to test deleteTemplatesBulk
        //instance.deleteTemplatesBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('doCarrierLookup', function() {
      it('should call doCarrierLookup successfully', function(done) {
        //uncomment below and update the code to test doCarrierLookup
        //instance.doCarrierLookup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('doEmailLookup', function() {
      it('should call doEmailLookup successfully', function(done) {
        //uncomment below and update the code to test doEmailLookup
        //instance.doEmailLookup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllBulkSessions', function() {
      it('should call getAllBulkSessions successfully', function(done) {
        //uncomment below and update the code to test getAllBulkSessions
        //instance.getAllBulkSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllChats', function() {
      it('should call getAllChats successfully', function(done) {
        //uncomment below and update the code to test getAllChats
        //instance.getAllChats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllInboundMessages', function() {
      it('should call getAllInboundMessages successfully', function(done) {
        //uncomment below and update the code to test getAllInboundMessages
        //instance.getAllInboundMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllMessageSessions', function() {
      it('should call getAllMessageSessions successfully', function(done) {
        //uncomment below and update the code to test getAllMessageSessions
        //instance.getAllMessageSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllOutboundMessages', function() {
      it('should call getAllOutboundMessages successfully', function(done) {
        //uncomment below and update the code to test getAllOutboundMessages
        //instance.getAllOutboundMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllScheduledMessages', function() {
      it('should call getAllScheduledMessages successfully', function(done) {
        //uncomment below and update the code to test getAllScheduledMessages
        //instance.getAllScheduledMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllTemplates', function() {
      it('should call getAllTemplates successfully', function(done) {
        //uncomment below and update the code to test getAllTemplates
        //instance.getAllTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAvailableDedicatedNumbers', function() {
      it('should call getAvailableDedicatedNumbers successfully', function(done) {
        //uncomment below and update the code to test getAvailableDedicatedNumbers
        //instance.getAvailableDedicatedNumbers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAvailableSenderSettingOptions', function() {
      it('should call getAvailableSenderSettingOptions successfully', function(done) {
        //uncomment below and update the code to test getAvailableSenderSettingOptions
        //instance.getAvailableSenderSettingOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBalanceNotificationOptions', function() {
      it('should call getBalanceNotificationOptions successfully', function(done) {
        //uncomment below and update the code to test getBalanceNotificationOptions
        //instance.getBalanceNotificationOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBalanceNotificationSettings', function() {
      it('should call getBalanceNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test getBalanceNotificationSettings
        //instance.getBalanceNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBlockedContacts', function() {
      it('should call getBlockedContacts successfully', function(done) {
        //uncomment below and update the code to test getBlockedContacts
        //instance.getBlockedContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBulkSession', function() {
      it('should call getBulkSession successfully', function(done) {
        //uncomment below and update the code to test getBulkSession
        //instance.getBulkSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCallbackSettings', function() {
      it('should call getCallbackSettings successfully', function(done) {
        //uncomment below and update the code to test getCallbackSettings
        //instance.getCallbackSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChat', function() {
      it('should call getChat successfully', function(done) {
        //uncomment below and update the code to test getChat
        //instance.getChat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChatByPhone', function() {
      it('should call getChatByPhone successfully', function(done) {
        //uncomment below and update the code to test getChatByPhone
        //instance.getChatByPhone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChatMessages', function() {
      it('should call getChatMessages successfully', function(done) {
        //uncomment below and update the code to test getChatMessages
        //instance.getChatMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContact', function() {
      it('should call getContact successfully', function(done) {
        //uncomment below and update the code to test getContact
        //instance.getContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactByPhone', function() {
      it('should call getContactByPhone successfully', function(done) {
        //uncomment below and update the code to test getContactByPhone
        //instance.getContactByPhone(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactIfBlocked', function() {
      it('should call getContactIfBlocked successfully', function(done) {
        //uncomment below and update the code to test getContactIfBlocked
        //instance.getContactIfBlocked(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactImportSessionProgress', function() {
      it('should call getContactImportSessionProgress successfully', function(done) {
        //uncomment below and update the code to test getContactImportSessionProgress
        //instance.getContactImportSessionProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactNote', function() {
      it('should call getContactNote successfully', function(done) {
        //uncomment below and update the code to test getContactNote
        //instance.getContactNote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactNotes', function() {
      it('should call getContactNotes successfully', function(done) {
        //uncomment below and update the code to test getContactNotes
        //instance.getContactNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContacts', function() {
      it('should call getContacts successfully', function(done) {
        //uncomment below and update the code to test getContacts
        //instance.getContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactsAutocomplete', function() {
      it('should call getContactsAutocomplete successfully', function(done) {
        //uncomment below and update the code to test getContactsAutocomplete
        //instance.getContactsAutocomplete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactsByListId', function() {
      it('should call getContactsByListId successfully', function(done) {
        //uncomment below and update the code to test getContactsByListId
        //instance.getContactsByListId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCountries', function() {
      it('should call getCountries successfully', function(done) {
        //uncomment below and update the code to test getCountries
        //instance.getCountries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCurrentUser', function() {
      it('should call getCurrentUser successfully', function(done) {
        //uncomment below and update the code to test getCurrentUser
        //instance.getCurrentUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomField', function() {
      it('should call getCustomField successfully', function(done) {
        //uncomment below and update the code to test getCustomField
        //instance.getCustomField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomFields', function() {
      it('should call getCustomFields successfully', function(done) {
        //uncomment below and update the code to test getCustomFields
        //instance.getCustomFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDedicatedNumber', function() {
      it('should call getDedicatedNumber successfully', function(done) {
        //uncomment below and update the code to test getDedicatedNumber
        //instance.getDedicatedNumber(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFavourites', function() {
      it('should call getFavourites successfully', function(done) {
        //uncomment below and update the code to test getFavourites
        //instance.getFavourites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInboundMessage', function() {
      it('should call getInboundMessage successfully', function(done) {
        //uncomment below and update the code to test getInboundMessage
        //instance.getInboundMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInboundMessagesNotificationSettings', function() {
      it('should call getInboundMessagesNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test getInboundMessagesNotificationSettings
        //instance.getInboundMessagesNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInvoices', function() {
      it('should call getInvoices successfully', function(done) {
        //uncomment below and update the code to test getInvoices
        //instance.getInvoices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getList', function() {
      it('should call getList successfully', function(done) {
        //uncomment below and update the code to test getList
        //instance.getList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListContactsIds', function() {
      it('should call getListContactsIds successfully', function(done) {
        //uncomment below and update the code to test getListContactsIds
        //instance.getListContactsIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLists', function() {
      it('should call getLists successfully', function(done) {
        //uncomment below and update the code to test getLists
        //instance.getLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListsOfContact', function() {
      it('should call getListsOfContact successfully', function(done) {
        //uncomment below and update the code to test getListsOfContact
        //instance.getListsOfContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessagePreview', function() {
      it('should call getMessagePreview successfully', function(done) {
        //uncomment below and update the code to test getMessagePreview
        //instance.getMessagePreview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessagePrice', function() {
      it('should call getMessagePrice successfully', function(done) {
        //uncomment below and update the code to test getMessagePrice
        //instance.getMessagePrice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessageSession', function() {
      it('should call getMessageSession successfully', function(done) {
        //uncomment below and update the code to test getMessageSession
        //instance.getMessageSession(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessageSessionStat', function() {
      it('should call getMessageSessionStat successfully', function(done) {
        //uncomment below and update the code to test getMessageSessionStat
        //instance.getMessageSessionStat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessagesBySessionId', function() {
      it('should call getMessagesBySessionId successfully', function(done) {
        //uncomment below and update the code to test getMessagesBySessionId
        //instance.getMessagesBySessionId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessagingCounters', function() {
      it('should call getMessagingCounters successfully', function(done) {
        //uncomment below and update the code to test getMessagingCounters
        //instance.getMessagingCounters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessagingStat', function() {
      it('should call getMessagingStat successfully', function(done) {
        //uncomment below and update the code to test getMessagingStat
        //instance.getMessagingStat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOutboundMessage', function() {
      it('should call getOutboundMessage successfully', function(done) {
        //uncomment below and update the code to test getOutboundMessage
        //instance.getOutboundMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOutboundMessagesHistory', function() {
      it('should call getOutboundMessagesHistory successfully', function(done) {
        //uncomment below and update the code to test getOutboundMessagesHistory
        //instance.getOutboundMessagesHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScheduledMessage', function() {
      it('should call getScheduledMessage successfully', function(done) {
        //uncomment below and update the code to test getScheduledMessage
        //instance.getScheduledMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSenderId', function() {
      it('should call getSenderId successfully', function(done) {
        //uncomment below and update the code to test getSenderId
        //instance.getSenderId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSenderIds', function() {
      it('should call getSenderIds successfully', function(done) {
        //uncomment below and update the code to test getSenderIds
        //instance.getSenderIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSenderSettings', function() {
      it('should call getSenderSettings successfully', function(done) {
        //uncomment below and update the code to test getSenderSettings
        //instance.getSenderSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpendingStat', function() {
      it('should call getSpendingStat successfully', function(done) {
        //uncomment below and update the code to test getSpendingStat
        //instance.getSpendingStat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubaccount', function() {
      it('should call getSubaccount successfully', function(done) {
        //uncomment below and update the code to test getSubaccount
        //instance.getSubaccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubaccounts', function() {
      it('should call getSubaccounts successfully', function(done) {
        //uncomment below and update the code to test getSubaccounts
        //instance.getSubaccounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubaccountsWithTokens', function() {
      it('should call getSubaccountsWithTokens successfully', function(done) {
        //uncomment below and update the code to test getSubaccountsWithTokens
        //instance.getSubaccountsWithTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemplate', function() {
      it('should call getTemplate successfully', function(done) {
        //uncomment below and update the code to test getTemplate
        //instance.getTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTimezones', function() {
      it('should call getTimezones successfully', function(done) {
        //uncomment below and update the code to test getTimezones
        //instance.getTimezones(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUnreadMessagesTotal', function() {
      it('should call getUnreadMessagesTotal successfully', function(done) {
        //uncomment below and update the code to test getUnreadMessagesTotal
        //instance.getUnreadMessagesTotal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUnsubscribedContact', function() {
      it('should call getUnsubscribedContact successfully', function(done) {
        //uncomment below and update the code to test getUnsubscribedContact
        //instance.getUnsubscribedContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUnsubscribers', function() {
      it('should call getUnsubscribers successfully', function(done) {
        //uncomment below and update the code to test getUnsubscribers
        //instance.getUnsubscribers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserDedicatedNumbers', function() {
      it('should call getUserDedicatedNumbers successfully', function(done) {
        //uncomment below and update the code to test getUserDedicatedNumbers
        //instance.getUserDedicatedNumbers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importContacts', function() {
      it('should call importContacts successfully', function(done) {
        //uncomment below and update the code to test importContacts
        //instance.importContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inviteSubaccount', function() {
      it('should call inviteSubaccount successfully', function(done) {
        //uncomment below and update the code to test inviteSubaccount
        //instance.inviteSubaccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markChatsReadBulk', function() {
      it('should call markChatsReadBulk successfully', function(done) {
        //uncomment below and update the code to test markChatsReadBulk
        //instance.markChatsReadBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markChatsUnreadBulk', function() {
      it('should call markChatsUnreadBulk successfully', function(done) {
        //uncomment below and update the code to test markChatsUnreadBulk
        //instance.markChatsUnreadBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('muteChat', function() {
      it('should call muteChat successfully', function(done) {
        //uncomment below and update the code to test muteChat
        //instance.muteChat(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('muteChatsBulk', function() {
      it('should call muteChatsBulk successfully', function(done) {
        //uncomment below and update the code to test muteChatsBulk
        //instance.muteChatsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ping', function() {
      it('should call ping successfully', function(done) {
        //uncomment below and update the code to test ping
        //instance.ping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reopenChatsBulk', function() {
      it('should call reopenChatsBulk successfully', function(done) {
        //uncomment below and update the code to test reopenChatsBulk
        //instance.reopenChatsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestNewSubaccountToken', function() {
      it('should call requestNewSubaccountToken successfully', function(done) {
        //uncomment below and update the code to test requestNewSubaccountToken
        //instance.requestNewSubaccountToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestSenderId', function() {
      it('should call requestSenderId successfully', function(done) {
        //uncomment below and update the code to test requestSenderId
        //instance.requestSenderId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchChats', function() {
      it('should call searchChats successfully', function(done) {
        //uncomment below and update the code to test searchChats
        //instance.searchChats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchChatsByIds', function() {
      it('should call searchChatsByIds successfully', function(done) {
        //uncomment below and update the code to test searchChatsByIds
        //instance.searchChatsByIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchChatsByReceipent', function() {
      it('should call searchChatsByReceipent successfully', function(done) {
        //uncomment below and update the code to test searchChatsByReceipent
        //instance.searchChatsByReceipent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchContacts', function() {
      it('should call searchContacts successfully', function(done) {
        //uncomment below and update the code to test searchContacts
        //instance.searchContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInboundMessages', function() {
      it('should call searchInboundMessages successfully', function(done) {
        //uncomment below and update the code to test searchInboundMessages
        //instance.searchInboundMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchLists', function() {
      it('should call searchLists successfully', function(done) {
        //uncomment below and update the code to test searchLists
        //instance.searchLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchOutboundMessages', function() {
      it('should call searchOutboundMessages successfully', function(done) {
        //uncomment below and update the code to test searchOutboundMessages
        //instance.searchOutboundMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchScheduledMessages', function() {
      it('should call searchScheduledMessages successfully', function(done) {
        //uncomment below and update the code to test searchScheduledMessages
        //instance.searchScheduledMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchTemplates', function() {
      it('should call searchTemplates successfully', function(done) {
        //uncomment below and update the code to test searchTemplates
        //instance.searchTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendMessage', function() {
      it('should call sendMessage successfully', function(done) {
        //uncomment below and update the code to test sendMessage
        //instance.sendMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendPhoneVerificationCodeTFA', function() {
      it('should call sendPhoneVerificationCodeTFA successfully', function(done) {
        //uncomment below and update the code to test sendPhoneVerificationCodeTFA
        //instance.sendPhoneVerificationCodeTFA(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setChatStatus', function() {
      it('should call setChatStatus successfully', function(done) {
        //uncomment below and update the code to test setChatStatus
        //instance.setChatStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unblockContact', function() {
      it('should call unblockContact successfully', function(done) {
        //uncomment below and update the code to test unblockContact
        //instance.unblockContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unblockContactsBulk', function() {
      it('should call unblockContactsBulk successfully', function(done) {
        //uncomment below and update the code to test unblockContactsBulk
        //instance.unblockContactsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unmuteChatsBulk', function() {
      it('should call unmuteChatsBulk successfully', function(done) {
        //uncomment below and update the code to test unmuteChatsBulk
        //instance.unmuteChatsBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unsubscribeContact', function() {
      it('should call unsubscribeContact successfully', function(done) {
        //uncomment below and update the code to test unsubscribeContact
        //instance.unsubscribeContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBalanceNotificationSettings', function() {
      it('should call updateBalanceNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test updateBalanceNotificationSettings
        //instance.updateBalanceNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCallbackSettings', function() {
      it('should call updateCallbackSettings successfully', function(done) {
        //uncomment below and update the code to test updateCallbackSettings
        //instance.updateCallbackSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateChatDesktopNotificationSettings', function() {
      it('should call updateChatDesktopNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test updateChatDesktopNotificationSettings
        //instance.updateChatDesktopNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContact', function() {
      it('should call updateContact successfully', function(done) {
        //uncomment below and update the code to test updateContact
        //instance.updateContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContactNote', function() {
      it('should call updateContactNote successfully', function(done) {
        //uncomment below and update the code to test updateContactNote
        //instance.updateContactNote(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCurrentUser', function() {
      it('should call updateCurrentUser successfully', function(done) {
        //uncomment below and update the code to test updateCurrentUser
        //instance.updateCurrentUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCustomField', function() {
      it('should call updateCustomField successfully', function(done) {
        //uncomment below and update the code to test updateCustomField
        //instance.updateCustomField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCustomFieldValue', function() {
      it('should call updateCustomFieldValue successfully', function(done) {
        //uncomment below and update the code to test updateCustomFieldValue
        //instance.updateCustomFieldValue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateInboundMessagesNotificationSettings', function() {
      it('should call updateInboundMessagesNotificationSettings successfully', function(done) {
        //uncomment below and update the code to test updateInboundMessagesNotificationSettings
        //instance.updateInboundMessagesNotificationSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateList', function() {
      it('should call updateList successfully', function(done) {
        //uncomment below and update the code to test updateList
        //instance.updateList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSenderSetting', function() {
      it('should call updateSenderSetting successfully', function(done) {
        //uncomment below and update the code to test updateSenderSetting
        //instance.updateSenderSetting(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTemplate', function() {
      it('should call updateTemplate successfully', function(done) {
        //uncomment below and update the code to test updateTemplate
        //instance.updateTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadAvatar', function() {
      it('should call uploadAvatar successfully', function(done) {
        //uncomment below and update the code to test uploadAvatar
        //instance.uploadAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadContactAvatar', function() {
      it('should call uploadContactAvatar successfully', function(done) {
        //uncomment below and update the code to test uploadContactAvatar
        //instance.uploadContactAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadListAvatar', function() {
      it('should call uploadListAvatar successfully', function(done) {
        //uncomment below and update the code to test uploadListAvatar
        //instance.uploadListAvatar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadMessageAttachment', function() {
      it('should call uploadMessageAttachment successfully', function(done) {
        //uncomment below and update the code to test uploadMessageAttachment
        //instance.uploadMessageAttachment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
